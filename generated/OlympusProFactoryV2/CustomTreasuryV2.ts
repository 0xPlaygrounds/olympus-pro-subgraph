// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class BondContractDewhitelisted extends ethereum.Event {
  get params(): BondContractDewhitelisted__Params {
    return new BondContractDewhitelisted__Params(this);
  }
}

export class BondContractDewhitelisted__Params {
  _event: BondContractDewhitelisted;

  constructor(event: BondContractDewhitelisted) {
    this._event = event;
  }

  get bondContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class BondContractWhitelisted extends ethereum.Event {
  get params(): BondContractWhitelisted__Params {
    return new BondContractWhitelisted__Params(this);
  }
}

export class BondContractWhitelisted__Params {
  _event: BondContractWhitelisted;

  constructor(event: BondContractWhitelisted) {
    this._event = event;
  }

  get bondContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Withdraw extends ethereum.Event {
  get params(): Withdraw__Params {
    return new Withdraw__Params(this);
  }
}

export class Withdraw__Params {
  _event: Withdraw;

  constructor(event: Withdraw) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get destination(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class CustomTreasuryV2 extends ethereum.SmartContract {
  static bind(address: Address): CustomTreasuryV2 {
    return new CustomTreasuryV2("CustomTreasuryV2", address);
  }

  bondContract(param0: Address): boolean {
    let result = super.call("bondContract", "bondContract(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBoolean();
  }

  try_bondContract(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("bondContract", "bondContract(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  payoutToken(): Address {
    let result = super.call("payoutToken", "payoutToken():(address)", []);

    return result[0].toAddress();
  }

  try_payoutToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("payoutToken", "payoutToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  policy(): Address {
    let result = super.call("policy", "policy():(address)", []);

    return result[0].toAddress();
  }

  try_policy(): ethereum.CallResult<Address> {
    let result = super.tryCall("policy", "policy():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  valueOfToken(_principalTokenAddress: Address, _amount: BigInt): BigInt {
    let result = super.call(
      "valueOfToken",
      "valueOfToken(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_principalTokenAddress),
        ethereum.Value.fromUnsignedBigInt(_amount)
      ]
    );

    return result[0].toBigInt();
  }

  try_valueOfToken(
    _principalTokenAddress: Address,
    _amount: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "valueOfToken",
      "valueOfToken(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_principalTokenAddress),
        ethereum.Value.fromUnsignedBigInt(_amount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _payoutToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _initialOwner(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DewhitelistBondContractCall extends ethereum.Call {
  get inputs(): DewhitelistBondContractCall__Inputs {
    return new DewhitelistBondContractCall__Inputs(this);
  }

  get outputs(): DewhitelistBondContractCall__Outputs {
    return new DewhitelistBondContractCall__Outputs(this);
  }
}

export class DewhitelistBondContractCall__Inputs {
  _call: DewhitelistBondContractCall;

  constructor(call: DewhitelistBondContractCall) {
    this._call = call;
  }

  get _bondContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class DewhitelistBondContractCall__Outputs {
  _call: DewhitelistBondContractCall;

  constructor(call: DewhitelistBondContractCall) {
    this._call = call;
  }
}

export class SendPayoutTokensCall extends ethereum.Call {
  get inputs(): SendPayoutTokensCall__Inputs {
    return new SendPayoutTokensCall__Inputs(this);
  }

  get outputs(): SendPayoutTokensCall__Outputs {
    return new SendPayoutTokensCall__Outputs(this);
  }
}

export class SendPayoutTokensCall__Inputs {
  _call: SendPayoutTokensCall;

  constructor(call: SendPayoutTokensCall) {
    this._call = call;
  }

  get _amountPayoutToken(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SendPayoutTokensCall__Outputs {
  _call: SendPayoutTokensCall;

  constructor(call: SendPayoutTokensCall) {
    this._call = call;
  }
}

export class TransferManagmentCall extends ethereum.Call {
  get inputs(): TransferManagmentCall__Inputs {
    return new TransferManagmentCall__Inputs(this);
  }

  get outputs(): TransferManagmentCall__Outputs {
    return new TransferManagmentCall__Outputs(this);
  }
}

export class TransferManagmentCall__Inputs {
  _call: TransferManagmentCall;

  constructor(call: TransferManagmentCall) {
    this._call = call;
  }

  get _newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferManagmentCall__Outputs {
  _call: TransferManagmentCall;

  constructor(call: TransferManagmentCall) {
    this._call = call;
  }
}

export class WhitelistBondContractCall extends ethereum.Call {
  get inputs(): WhitelistBondContractCall__Inputs {
    return new WhitelistBondContractCall__Inputs(this);
  }

  get outputs(): WhitelistBondContractCall__Outputs {
    return new WhitelistBondContractCall__Outputs(this);
  }
}

export class WhitelistBondContractCall__Inputs {
  _call: WhitelistBondContractCall;

  constructor(call: WhitelistBondContractCall) {
    this._call = call;
  }

  get _bondContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class WhitelistBondContractCall__Outputs {
  _call: WhitelistBondContractCall;

  constructor(call: WhitelistBondContractCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _destination(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}
