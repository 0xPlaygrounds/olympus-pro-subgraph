// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class BondCreation extends ethereum.Event {
  get params(): BondCreation__Params {
    return new BondCreation__Params(this);
  }
}

export class BondCreation__Params {
  _event: BondCreation;

  constructor(event: BondCreation) {
    this._event = event;
  }

  get treasury(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get bond(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _initialOwner(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class OlympusProFactoryStorage__bondDetailsResult {
  value0: Address;
  value1: Address;
  value2: Address;
  value3: Address;
  value4: Address;

  constructor(
    value0: Address,
    value1: Address,
    value2: Address,
    value3: Address,
    value4: Address
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromAddress(this.value3));
    map.set("value4", ethereum.Value.fromAddress(this.value4));
    return map;
  }
}

export class OlympusProFactoryStorage__pushBondResult {
  value0: Address;
  value1: Address;

  constructor(value0: Address, value1: Address) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    return map;
  }
}

export class OlympusProFactoryStorage extends ethereum.SmartContract {
  static bind(address: Address): OlympusProFactoryStorage {
    return new OlympusProFactoryStorage("OlympusProFactoryStorage", address);
  }

  bondDetails(param0: BigInt): OlympusProFactoryStorage__bondDetailsResult {
    let result = super.call(
      "bondDetails",
      "bondDetails(uint256):(address,address,address,address,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new OlympusProFactoryStorage__bondDetailsResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toAddress(),
      result[3].toAddress(),
      result[4].toAddress()
    );
  }

  try_bondDetails(
    param0: BigInt
  ): ethereum.CallResult<OlympusProFactoryStorage__bondDetailsResult> {
    let result = super.tryCall(
      "bondDetails",
      "bondDetails(uint256):(address,address,address,address,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new OlympusProFactoryStorage__bondDetailsResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toAddress(),
        value[3].toAddress(),
        value[4].toAddress()
      )
    );
  }

  indexOfBond(param0: Address): BigInt {
    let result = super.call("indexOfBond", "indexOfBond(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_indexOfBond(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "indexOfBond",
      "indexOfBond(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  olympusProFactory(): Address {
    let result = super.call(
      "olympusProFactory",
      "olympusProFactory():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_olympusProFactory(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "olympusProFactory",
      "olympusProFactory():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  policy(): Address {
    let result = super.call("policy", "policy():(address)", []);

    return result[0].toAddress();
  }

  try_policy(): ethereum.CallResult<Address> {
    let result = super.tryCall("policy", "policy():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  pushBond(
    _payoutToken: Address,
    _principleToken: Address,
    _customTreasury: Address,
    _customBond: Address,
    _initialOwner: Address,
    _tierCeilings: Array<BigInt>,
    _fees: Array<BigInt>
  ): OlympusProFactoryStorage__pushBondResult {
    let result = super.call(
      "pushBond",
      "pushBond(address,address,address,address,address,uint256[],uint256[]):(address,address)",
      [
        ethereum.Value.fromAddress(_payoutToken),
        ethereum.Value.fromAddress(_principleToken),
        ethereum.Value.fromAddress(_customTreasury),
        ethereum.Value.fromAddress(_customBond),
        ethereum.Value.fromAddress(_initialOwner),
        ethereum.Value.fromUnsignedBigIntArray(_tierCeilings),
        ethereum.Value.fromUnsignedBigIntArray(_fees)
      ]
    );

    return new OlympusProFactoryStorage__pushBondResult(
      result[0].toAddress(),
      result[1].toAddress()
    );
  }

  try_pushBond(
    _payoutToken: Address,
    _principleToken: Address,
    _customTreasury: Address,
    _customBond: Address,
    _initialOwner: Address,
    _tierCeilings: Array<BigInt>,
    _fees: Array<BigInt>
  ): ethereum.CallResult<OlympusProFactoryStorage__pushBondResult> {
    let result = super.tryCall(
      "pushBond",
      "pushBond(address,address,address,address,address,uint256[],uint256[]):(address,address)",
      [
        ethereum.Value.fromAddress(_payoutToken),
        ethereum.Value.fromAddress(_principleToken),
        ethereum.Value.fromAddress(_customTreasury),
        ethereum.Value.fromAddress(_customBond),
        ethereum.Value.fromAddress(_initialOwner),
        ethereum.Value.fromUnsignedBigIntArray(_tierCeilings),
        ethereum.Value.fromUnsignedBigIntArray(_fees)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new OlympusProFactoryStorage__pushBondResult(
        value[0].toAddress(),
        value[1].toAddress()
      )
    );
  }
}

export class PushBondCall extends ethereum.Call {
  get inputs(): PushBondCall__Inputs {
    return new PushBondCall__Inputs(this);
  }

  get outputs(): PushBondCall__Outputs {
    return new PushBondCall__Outputs(this);
  }
}

export class PushBondCall__Inputs {
  _call: PushBondCall;

  constructor(call: PushBondCall) {
    this._call = call;
  }

  get _payoutToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _principleToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _customTreasury(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _customBond(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _initialOwner(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _tierCeilings(): Array<BigInt> {
    return this._call.inputValues[5].value.toBigIntArray();
  }

  get _fees(): Array<BigInt> {
    return this._call.inputValues[6].value.toBigIntArray();
  }
}

export class PushBondCall__Outputs {
  _call: PushBondCall;

  constructor(call: PushBondCall) {
    this._call = call;
  }

  get _treasury(): Address {
    return this._call.outputValues[0].value.toAddress();
  }

  get _bond(): Address {
    return this._call.outputValues[1].value.toAddress();
  }
}

export class SetFactoryAddressCall extends ethereum.Call {
  get inputs(): SetFactoryAddressCall__Inputs {
    return new SetFactoryAddressCall__Inputs(this);
  }

  get outputs(): SetFactoryAddressCall__Outputs {
    return new SetFactoryAddressCall__Outputs(this);
  }
}

export class SetFactoryAddressCall__Inputs {
  _call: SetFactoryAddressCall;

  constructor(call: SetFactoryAddressCall) {
    this._call = call;
  }

  get _factory(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetFactoryAddressCall__Outputs {
  _call: SetFactoryAddressCall;

  constructor(call: SetFactoryAddressCall) {
    this._call = call;
  }
}

export class TransferManagmentCall extends ethereum.Call {
  get inputs(): TransferManagmentCall__Inputs {
    return new TransferManagmentCall__Inputs(this);
  }

  get outputs(): TransferManagmentCall__Outputs {
    return new TransferManagmentCall__Outputs(this);
  }
}

export class TransferManagmentCall__Inputs {
  _call: TransferManagmentCall;

  constructor(call: TransferManagmentCall) {
    this._call = call;
  }

  get _newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferManagmentCall__Outputs {
  _call: TransferManagmentCall;

  constructor(call: TransferManagmentCall) {
    this._call = call;
  }
}
