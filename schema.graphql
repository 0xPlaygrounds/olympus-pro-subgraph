# ================================================================
# Bond-level entities
# ================================================================
"""
The Bond entity stores data about a single custom bond
"""
type Bond @entity {
  "Bond contract address"
  id: ID!

  "Timestamp at which the bond contract was created using the Olympus Pro factory contract"
  createdAtTimestamp: BigInt!

  owner: Bytes!

  "Name of the bond"
  name: String!
  token0: Bytes!
  token1: Bytes!

  "Address of the treasury contract to which the bonded assets are sent"
  treasury: Bytes!

  "Principle token address, i.e.: the token that is bonded"
  principleToken: Bytes!
  
  "Payout token address, i.e.: the token users receive"
  payoutToken: Bytes! 

  fees: BigDecimal!
  type: String!

  "Total number of user bond purchases"
  userBondCount: BigInt!
  "Latest bond purchase, if any"
  latestUserBond: UserBond
  "User bond purchases for this bond"
  userBonds: [UserBond!]! @derivedFrom(field: "bond")

  "Total number of user bond redemptions"
  userRedemptionCount: BigInt!
  "Latest bond redemption, if any"
  latestUserRedemption: UserBond
  "User bond redemptions for this bond"
  userRedemptions: [UserRedemption!]! @derivedFrom(field: "bond")

  "Daily stats for this bond"
  dailyData: [BondDayData!]! @derivedFrom(field: "bond")
  "Hourly stats for this bond"
  hourlyData: [BondHourData!]! @derivedFrom(field: "bond")
}

"""
The BondDayData entity stores data that is accumulated 
and condensed into day stats for each bond
"""
type BondDayData @entity {
  id: ID!   # BOND_ADDRESS-TIMESTAMP

  "Timestamp indicating the start of the period"
  timestamp: BigInt!

  "The bond related to these stats"
  bond: Bond!

  "Total number of bond purchases during the period"
  userBondCount: BigInt!
  "Total number of bond redemptions during the period"
  userRedemptionCount: BigInt!

  "Total principle tokens that were bonded during the period"
  principalVolume: BigDecimal!
  "Total value of principle tokens that were bonded during the period"
  principalVolumeUSD: BigDecimal!
  "Total payout tokens that were paid out as bonds during the period"
  payoutVolume: BigDecimal!
  "Total value of tokens that were paid out as bonds during the period"
  payoutVolumeUSD: BigDecimal!
  "Total payout tokens that were redeemed during the period"
  redemptionVolume: BigDecimal!
  "Total value of payout tokens that were redeemed during the period"
  redemptionVolumeUSD: BigDecimal!

  "Opening of the period. Unit price of payout tokens denominated in principle token"
  bondPriceOpen: BigDecimal!
  "Highest of the period. Unit price of payout tokens denominated in principle token"
  bondPriceHigh: BigDecimal!
  "Lowest of the period. Unit price of payout tokens denominated in principle token"
  bondPriceLow: BigDecimal!
  "Closing of the period. Unit price of payout tokens denominated in principle token"
  bondPriceClose: BigDecimal!

  "Opening of the period. Unit price of payout tokens denominated in USD dollars"
  bondPriceUSDOpen: BigDecimal!
  "Highest of the period. Unit price of payout tokens denominated in USD dollars"
  bondPriceUSDHigh: BigDecimal!
  "Lowest of the period. Unit price of payout tokens denominated in USD dollars"
  bondPriceUSDLow: BigDecimal!
  "Closing of the period. Unit price of payout tokens denominated in USD dollars"
  bondPriceUSDClose: BigDecimal!
}

"""
The BondHourData entity stores data that is accumulated 
and condensed into hour stats for each bond
"""
type BondHourData @entity {
  id: ID!   # BOND_ADDRESS-TIMESTAMP

  "Timestamp indicating the start of the hour period"
  timestamp: BigInt!

  "The bond related to these stats"
  bond: Bond!

  "Total number of bond purchases during the hour"
  userBondCount: BigInt!
  "Total number of bond redemptions during the hour"
  userRedemptionCount: BigInt!

  "Total principle tokens that were bonded during the period"
  principalVolume: BigDecimal!
  "Total value of principle tokens that were bonded during the period"
  principalVolumeUSD: BigDecimal!
  "Total payout tokens that were paid out as bonds during the period"
  payoutVolume: BigDecimal!
  "Total value of tokens that were paid out as bonds during the period"
  payoutVolumeUSD: BigDecimal!
  "Total payout tokens that were redeemed during the period"
  redemptionVolume: BigDecimal!
  "Total value of payout tokens that were redeemed during the period"
  redemptionVolumeUSD: BigDecimal!

  "Opening of the period. Unit price of payout tokens denominated in principle token"
  bondPriceOpen: BigDecimal!
  "Highest of the period. Unit price of payout tokens denominated in principle token"
  bondPriceHigh: BigDecimal!
  "Lowest of the period. Unit price of payout tokens denominated in principle token"
  bondPriceLow: BigDecimal!
  "Closing of the period. Unit price of payout tokens denominated in principle token"
  bondPriceClose: BigDecimal!

  "Opening of the period. Unit price of payout tokens denominated in USD dollars"
  bondPriceUSDOpen: BigDecimal!
  "Highest of the period. Unit price of payout tokens denominated in USD dollars"
  bondPriceUSDHigh: BigDecimal!
  "Lowest of the period. Unit price of payout tokens denominated in USD dollars"
  bondPriceUSDLow: BigDecimal!
  "Closing of the period. Unit price of payout tokens denominated in USD dollars"
  bondPriceUSDClose: BigDecimal!
}


# ================================================================
# User-level entities
# ================================================================
"""
The UserBond entity stores data about a single bond purchase by a user
"""
type UserBond @entity {
  ""
  id: ID!
  "Timestamp of bond purchase"
  timestamp: BigInt!

  "Bond purchased"
  bond: Bond!
  "User making the purchase"
  user: Bytes!

  "Amount deposited, denominated in principal token"
  deposit: BigDecimal!
  "Amount deposited, denominated in USD (AT THE TIME OF BOND SALE!)"
  depositUSD: BigDecimal!
  "Amount paid out, denominated in payout token"
  payout: BigDecimal!
  "Amount paid out, denominated in USD (AT THE TIME OF BOND SALE!)"
  payoutUSD: BigDecimal!

  "Timestamp indicating the bond expiry"
  expires: BigInt!

  "Bond discount"
  discount: BigDecimal!
}

"""
The UserRedemption entity stores data about a single bond redemption by a user
"""
type UserRedemption @entity {
  ""
  id: ID!
  "Timestamp of bond purchase"
  timestamp: BigInt!

  "Bond redeemed"
  bond: Bond!
  "User making the redemption"
  user: Bytes!

  "Address of recipient of redeemed tokens"
  recipient: Bytes!

  "Amount paid out, denominated in payout token"
  payout: BigDecimal!
  "Amount paid out, denominated in USD (AT THE TIME OF REDEMPTION!)"
  payoutUSD: BigDecimal!
  "Amount of tokens remaining to be redeemed"
  remaining: BigDecimal!
  "Value of tokens remaining to be redeemed, denominated in USD"
  remainingUSD: BigDecimal!
}